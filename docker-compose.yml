version: "3.2"
services:
  reverse-proxy:
    container_name: traefik
    restart: ${RESTART_CONFIG}
    image: traefik:${TAG}
    command:
      - --entrypoints.web.address=:80
      - --entrypoints.websecure.address=:443
      - --providers.docker=true
      - --providers.docker.exposedbydefault=false
      - --api.insecure=true
      - --providers.file.directory=/etc/traefik/dynamic
    ports:
      - 80:80
      - 443:443
      - ${TRAEFIK_PORT}:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG_DIR}/certs-traefik.yaml:/etc/traefik/dynamic/certs-traefik.yaml
      - ${CONFIG_DIR}/certs:/etc/certs

  radarr:
    container_name: radarr
    image: ghcr.io/hotio/radarr:${TAG}
    restart: ${RESTART_CONFIG}
    logging:
      driver: json-file
    ports:
      - ${RADARR_PORT}:7878
    environment:
      - PUID=${RADARR_UID}
      - PGID=${PLEX_GID}
      - TZ=${TZ}
      - UMASK_SET=${UMASK}
    volumes:
      - ${APPDATA_DIR}/radarr:/config
      - ${DATA_DIR}:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr_route.entrypoints=websecure
      - traefik.http.routers.radarr_route.tls=true
      - traefik.http.routers.radarr_route.rule=Host(`${RADARR_HOST}`)
      - traefik.http.routers.radarr_route.service=radarr_service
      - traefik.http.services.radarr_service.loadbalancer.server.port=${RADARR_PORT}
  sonarr:
    container_name: sonarr
    image: ghcr.io/hotio/sonarr:${TAG}
    restart: ${RESTART_CONFIG}
    logging:
      driver: json-file
    ports:
      - ${SONARR_PORT}:8989
    environment:
      - UID=${SONARR_UID}
      - PGID=${PLEX_GID}
      - TZ=${TZ}
      - UMASK_SET=${UMASK} #optional
    volumes:
      - ${APPDATA_DIR}/sonarr:/config
      - ${DATA_DIR}:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr_route.entrypoints=websecure
      - traefik.http.routers.sonarr_route.tls=true
      - traefik.http.routers.sonarr_route.rule=Host(`${SONARR_HOST}`)
      - traefik.http.routers.sonarr_route.service=sonarr_service
      - traefik.http.services.sonarr_service.loadbalancer.server.port=${SONARR_PORT}

  lidarr:
    container_name: lidarr
    image: ghcr.io/hotio/lidarr:${TAG}
    restart: ${RESTART_CONFIG}
    logging:
      driver: json-file
    ports:
      - ${LIDARR_PORT}:8686
    environment:
      - UID=${LIDARR_UID}
      - PGID=${PLEX_GID}
      - TZ=${TZ}
      - UMASK_SET=${UMASK} #optional
    volumes:
      - ${APPDATA_DIR}/lidarr:/config
      - ${DATA_DIR}:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.lidarr_route.entrypoints=websecure
      - traefik.http.routers.lidarr_route.tls=true
      - traefik.http.routers.lidarr_route.rule=Host(`${LIDARR_HOST}`)
      - traefik.http.routers.lidarr_route.service=lidarr_service
      - traefik.http.services.lidarr_service.loadbalancer.server.port=${LIDARR_PORT}

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr:${TAG}
    restart: ${RESTART_CONFIG}
    logging:
      driver: json-file
    ports:
      - ${PROWLARR_PORT}:9696
    environment:
      - PUID=${PROWLARR_UID}
      - PGID=${PLEX_GID}
      - UMASK_SET=${UMASK}
      - TZ=${TZ}
    volumes:
     - ${APPDATA_DIR}/prowlarr:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr_route.entrypoints=websecure
      - traefik.http.routers.prowlarr_route.tls=true
      - traefik.http.routers.prowlarr_route.rule=Host(`${PROWLARR_HOST}`)
      - traefik.http.routers.prowlarr_route.service=prowlarr_service
      - traefik.http.services.prowlarr_service.loadbalancer.server.port=${PROWLARR_PORT}

  qbittorrent:
    container_name: qbittorrent
    restart: ${RESTART_CONFIG}
    image: ghcr.io/hotio/qbittorrent:${TAG}
    ports:
      - ${QBITTORRENT_PORT}:8080
    environment:
      - PUID=${QBITTORRENT_UID}
      - PGID=${PLEX_GID}
      - UMASK=002
      - TZ=Etc/UTC
    volumes:
      - ${APPDATA_DIR}/qborrent:/config
      - ${DATA_DIR}:/data
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbittorrent_route.entrypoints=websecure
      - traefik.http.routers.qbittorrent_route.tls=true
      - traefik.http.routers.qbittorrent_route.rule=Host(`${QBITTORRENT_HOST}`)
      - traefik.http.routers.qbittorrent_route.service=qbittorrent_service
      - traefik.http.services.qbittorrent_service.loadbalancer.server.port=${QBITTORRENT_PORT}

  plex:
    container_name: plex
    image: plexinc/pms-docker
    network_mode: host
    restart: ${RESTART_CONFIG}
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM=${PLEX_CLAIM}
      - PLEX_UID=${PLEX_UID}
      - PLEX_GID=${PLEX_GID}
    volumes:
      - ${APPDATA_DIR}/plex:/config
      - ${DATA_DIR}/media:/plex
      
